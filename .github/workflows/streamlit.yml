name: streamlit

on:
  schedule:
    - cron: "10 */6 * * *"
  workflow_dispatch:

env:
  SCRIPT_NAME: streamlit
  REQUIREMENTS_FILE: requirements_PW.txt
  API_SCRIPT: github_api.sh

jobs:
  build:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        account: [STREAMLIT_ACCOUNTS]
    steps:
      - name: Checkout public repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: ${{ env.REQUIREMENTS_FILE }}

      - name: Install requirements
        run: |
          pip install -r ${{ env.REQUIREMENTS_FILE }}
          playwright install --with-deps chromium

      - name: Download script from default private repo
        run: |
          # 加载 GitHub API 函数
          source scripts/${{ env.API_SCRIPT }}
          
          # 下载主脚本
          download_file "${{ env.SCRIPT_NAME }}.py" "${{ env.SCRIPT_NAME }}.py" "${{ secrets.ACCESS_TOKEN }}" "${{ secrets.PRIVATE_REPO_OWNER }}" "${{ secrets.PRIVATE_REPO_NAME }}"
          
          # 检查下载是否成功
          if [ -f "${{ env.SCRIPT_NAME }}.py" ]; then
            echo "Script file ${{ env.SCRIPT_NAME }}.py downloaded successfully"
          else
            echo "Failed to download script file ${{ env.SCRIPT_NAME }}.py"
          fi

      - name: Run python script
        run: python3 ${{ env.SCRIPT_NAME }}.py
        env:
          ACCOUNT_SECRET: ${{ secrets[matrix.account] }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
